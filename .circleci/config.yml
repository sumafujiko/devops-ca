version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  build:
    docker:
      - image: cimg/node:14.20.0
    steps:
      - checkout
      - run:
          name: List Directory Contents
          command: |
            echo "Current directory:"
            pwd
            echo "Directory contents:"
            ls -la
            echo "SimpleApplication contents:"
            ls -la SimpleApplication
      - run:
          name: Install Dependencies
          command: |
            cd SimpleApplication
            npm install
      - run:
          name: Run Tests
          command: |
            cd SimpleApplication
            npm test

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - aws-cli/setup
      - add_ssh_keys:
          fingerprints:
            - "SHA256:btZIX7MqhgzEtJuohV23iAoUmXiLcdWHknRt0O4gdNc"
      - run:
          name: Debug EC2 Connection Info
          command: |
            echo "EC2_USERNAME: $EC2_USERNAME"
            echo "EC2_PUBLIC_IP: $EC2_PUBLIC_IP"
      - run:
          name: Network Debugging
          command: |
            echo "Ping test:"
            ping -c 4 $EC2_PUBLIC_IP
            echo "Traceroute:"
            traceroute $EC2_PUBLIC_IP
            echo "Telnet test:"
            timeout 5 telnet $EC2_PUBLIC_IP 22 || echo "Telnet failed"
      - run:
          name: Deploy to EC2
          no_output_timeout: 30m
          command: |
            if [ -z "$EC2_PUBLIC_IP" ]; then
              echo "EC2_PUBLIC_IP is not set. Please set this environment variable in CircleCI project settings."
              exit 1
            fi
            ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 $EC2_USERNAME@$EC2_PUBLIC_IP '
            set -x
            echo "Changing directory..."
            cd ~/devops-ca/SimpleApplication || exit 1
            echo "Pulling latest changes..."
            timeout 300s git pull origin main || exit 1
            echo "Installing dependencies..."
            timeout 300s npm install || exit 1
            echo "Starting/Restarting application..."
            timeout 60s pm2 start ./bin/www --name mathapp || timeout 60s pm2 restart mathapp || exit 1
            '

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main